-- Database: BasicCMS

-- Hora de crear tablas

CREATE TABLE Roles(
	Id int primary key generated by default as identity,
	Nombre varchar(30) not null,
	Descripcion varchar(150)
);

CREATE TABLE Usuarios(
	Id int primary key generated by default as identity,
	Nombre varchar(30) not null,
	ApellidoP varchar(30) not null,
	ApellidoM varchar(30) not null,
	NombreUsuario varchar(50) not null,
	PasswordHash varchar(900) not null,
	PasswordSalt varchar(500) not null
);

CREATE TABLE Usuarios_Roles(
	UsuarioId int,
	RoleId int,
	primary key (UsuarioId, RoleId),
	foreign key (UsuarioId) references Usuarios(Id)		
		match simple
		on update no action
		on delete cascade,
	foreign key (RoleId) references Roles(Id)
		match simple
		on update no action
		on delete cascade
);

CREATE TABLE Imagenes
(
	Id int primary key generated by default as identity,
	Titulo_Imagen varchar(50),
	Ruta varchar(150),
	Alto smallint,
	Ancho smallint,
	Fecha_Subida timestamp with time zone,
	UsuarioId int,
	foreign key (UsuarioId) references Usuarios(Id)
		match simple
		on update no action
		on delete set default
);

-- La relación entre imagenes y articulos indica que esa imagen es la portada de ese artículo.

CREATE TABLE Articulos
(
	Id int primary key generated by default as identity,
	Titulo varchar(50) not null,
	Contenido text not null,
	Fecha_Pub timestamp with time zone not null,
	ImagenId int,
	AutorId int,
	constraint FK_ArticuloAutor foreign key (AutorId) references Usuarios(Id)
		match simple
		on delete set default,
	constraint FK_ArticuloImagen foreign key (ImagenId) references Imagenes(Id)
		match simple
		on delete set default
);

CREATE TABLE Categorias(
	Id int primary key generated by default as identity,
	Nombre varchar(30) not null,
	Descripcion varchar(150)
);

CREATE TABLE Articulos_Categorias(
	ArticuloId int,
	CategoriaId int,
	primary key (ArticuloId, CategoriaId),
	constraint FK_AC_Articulo foreign key (ArticuloId) references Articulos(Id)
		match simple
		on update no action
		on delete cascade,
	constraint FK_AC_Categoria foreign key (CategoriaId) references Categorias(Id)
		match simple
		on update no action
		on delete cascade
);

CREATE TABLE Comentarios(
	Id int primary key generated by default as identity,
	Texto text,
	Fecha_Pub timestamp with time zone,
	AutorId int not null,
	ArticuloId int not null,
	constraint FK_ComentarioUsuario foreign key (AutorId) references Usuarios(Id)
		match simple
		on update no action
		on delete cascade,
	constraint FK_ComentarioArticulo foreign key (ArticuloId) references Articulos(Id)
		match simple
		on update no action
		on delete cascade
);

INSERT INTO Roles(Nombre, Descripcion) VALUES ('admin', 'Es el administrado del sistema, tiene acceso a todo.');
INSERT INTO Roles(Nombre, Descripcion) VALUES ('editor', 'Es un usuario normal pero con la característica de que puede crear artículos.');
INSERT INTO Roles(Nombre, Descripcion) VALUES ('user', 'Es un usuario normal, sin permisos especiales de ningún tipo.');

CREATE EXTENSION pgcrypto;